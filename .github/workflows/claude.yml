name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # This is an optional setting that allows Claude to read CI results on PRs
          additional_permissions: |
            actions: read
          
          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-opus-4-20250514"
          
          # Optional: Customize the trigger phrase (default: @claude)
          # trigger_phrase: "/claude"
          
          # Optional: Trigger when specific user is assigned to an issue
          # assignee_trigger: "claude-bot"
          
          # Optional: Allow Claude to run specific commands
          allowed_tools: "Bash(go fmt:*),Bash(go vet:*),Bash(go test:*),Bash(git status:*),Bash(git log:*),Bash(git show:*),Bash(git blame:*),Bash(git reflog:*),Bash(git ls-files:*),Bash(git branch:*),Bash(git tag:*),Bash(git diff:*),Bash(git rev-parse:*),Bash(git fetch:*),Bash(go mod:*),mcp__github__create_pull_request,mcp__github__get_pull_request,mcp__github__get_pull_request_comments,mcp__github__add_pull_request_review_comment,mcp__github__list_pull_requests,mcp__github__create_issue,mcp__github__add_issue_comment,mcp__github__get_issue,mcp__github__get_issue_comments,mcp__github__list_issues,mcp__github__update_issue,mcp__github__update_issue_comment"
          
          # Optional: Add custom instructions for Claude to customize its behavior for your project
          custom_instructions: |
            Follow the project structure defined in CLAUDE.md. 
            Follow Go best practices and effective Go guidelines.
            If you modify *.go code, ensure all new code has tests with good coverage.
            If you modify *.go code, always run go fmt, go vet, and go test before submitting changes.
            Break down tasks into small, manageable units that can be completed within a single commit.
            Do not mix multiple different purposes of changes. If you find a different issue, create an issue for it
            If you need some action that you can not do and need human action, create a issue for it. 
            All modifications should be done via a GitHub pull request. Rather than creating a link to submit it, create it by yourself by using GitHub MCP
          
          # Optional: Custom environment variables for Claude
          # claude_env: |
          #   NODE_ENV: test

